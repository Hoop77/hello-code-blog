<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on The computer science blog.</title>
    <link>https://hellocodeblog.com/post/</link>
    <description>Recent content in Posts on The computer science blog.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Â© 2019 by Philipp Badenhoop. All Rights Reserved.</copyright>
    <lastBuildDate>Tue, 12 Feb 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://hellocodeblog.com/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Autonomous Racing with Deep Learning</title>
      <link>https://hellocodeblog.com/post/bachelor-thesis/</link>
      <pubDate>Tue, 12 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hellocodeblog.com/post/bachelor-thesis/</guid>
      <description>Today, I finally defended my bachelor thesis. It was a brilliant experience since many of my fellow students supported me by taking part at this event today. A big thanks to all of them!
The topic of the thesis was &amp;ldquo;Autonomous Racing with Deep Learning&amp;rdquo;. In the work, I developed a new approach to autonomous racing which hasn&amp;rsquo;t been introduced in literature so far to my knowledge. Furthermore, I strongly focused on giving a formal but comprehensible introduction into deep learning which can be read completely standalone.</description>
    </item>
    
    <item>
      <title>An Introduction to asionet</title>
      <link>https://hellocodeblog.com/post/asionet/</link>
      <pubDate>Tue, 08 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hellocodeblog.com/post/asionet/</guid>
      <description>Introduction In case you&amp;rsquo;ve ever done some network programming in C++, you probably stumbled upon the quasi-standard boost::asio library. It uses asynchronous programming making it scalable but on the other side, it takes quite some time to learn how to use it correctly.
asionet is built on top of boost::asio which makes it 100% compatible with it but easier to use at the same time. For example, managing timeouts and sending and receiving serialized messages is done with only a few lines of code.</description>
    </item>
    
  </channel>
</rss>